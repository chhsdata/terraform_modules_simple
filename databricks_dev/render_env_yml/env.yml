dbricks: # databricks

  # databricks connection (conn) property variables
  conn:
    environment: "dev"
    user_name: "robert-altmiller"
    client_id: "**********"
    client_secret: "***********"
    account_id: "0d26daa6-5e44-**********"
    account_url: "https://accounts.cloud.databricks.com"
    instance_url: "https://*********.cloud.databricks.com"
    metastore_id: "dedc0345-*******"
    metastore_s3_path: "s3://******-uc-metastore-us-east-1/metastore/dedc0345-*******"

  # databricks workspace (ws) variables
  ws:
    name: "my-workspace"
    deployment_name: "my-workspace"
    mws_network_name: "my-mws-network"
    mws_credentials_name: "my-credentials"
    mws_storage_config_name: "my-storage"
    mws_admin_group: "dev-admins"
    mws_contributor_group: "dev-contributors"
    mws_reader_group: "dev-readers"

  # databricks storage credential (sc) variables
  # uc = unity catalog
  sc:
    sc_s3_bucket_dev: "my-dev-bucket"
    sc_s3_bucket_test: "my-stage-bucket"
    sc_s3_bucket_prod: "my-prod-bucket"
    sc_s3_bucket_uc: "my-uc-bucket"
    sc_iam_policy_name: "my-sc-iam-policy"
    sc_iam_role_external_assume: "my-sc-iam-role-external-assume"

aws: # amazon web services

  # aws connection property variables
  conn:
    region: "us-east-1"
    account_id: "**********"
    access_key: "**********"
    access_key_secret: "************"

  # aws iam variables
  iam:
    role_name: "my-cross-account"
    role_policy_name: "my-cross-account-policy"
    role_tags: {}

  # aws virtual private cloud (vpc) variables
  vpc:
    name: "my-aws-vpc"
    cidr_block: "10.4.0.0/16"
    enable_dns_hostnames: True
    enable_nat_gateway: True
    single_nat_gateway: True
    create_igw: True
    # sg = security group
    default_security_group_name: "my-aws-sg"
    default_security_group_egress: "0.0.0.0/0"
    default_security_group_ingress: True
    manage_default_security_group: True
    tags: {}

  # aws virtual private cloud (vpc) endpoints variables
  vpc_endpoints:
    endpoints_tags: {}
    s3_service_name: "s3"
    s3_service_type: "Gateway"
    s3_endpoints_tags: {Name = "s3-vpc-endpoint"}
    tags: {}

  # aws s3 bucket variables
  s3:
    bucket_name: "my-s3-bucket"
    object_ownership: "BucketOwnerEnforced"
    versioning: "Disabled"
    tags: { Name = s3-bucket }
    